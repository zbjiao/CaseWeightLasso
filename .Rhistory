df = as_tibble(df) %>% gather('coef', 'val', -w)
print(ggplot(df, aes(x = w, y = val, group=coef, color = coef))+
geom_line()+ggtitle(paste("Approx Solution path for Case",toString(k)))+
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
xlab(TeX("Case weight $\\omega$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(beta_path[,ind]), aes(color = coef))+
ggtitle(paste("Solution path for Observation",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
df = beta_path[,ind]
colnames(df) = coln[ind]
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = colnames(df)[j])
fig = fig + geom_function(data = xx, fun = plot_helper,
args = list(df[,j]), aes(color = coef))
}
fig = fig + labs(color = "Feature")
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
}
#' extract coefficients from a SolPathLooLasso object
#' @param object      fitted SolPathLooLasso object
#' @return The solution path plot
#' @seealso predict, plot methods
#' @examples
#' library(lars)
#' data(diabetes)
#' attach(diabetes)
#' obj = SolPathLooLasso(x,y,k = 182, 5, 'lambda')
#'
#' detach(diabetes)
#'
#' set.seed(100)
#' x = matrix(rnorm(50*200),nrow=50)
#' y = x[,1:5]%*%c(5,4,3,2,1) + rnorm(50)
#' ans = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
#' plot(ans)
#' predict(ans)
#' coef(ans)
#' @export
## S3 method for class 'SolPathLooLasso'
coef.SolPathLooLasso <- function(object, ...){ans = predict(object, type = "coefficient")
data.frame(coef = c(ans$loobeta0,ans$loobeta),row.names = c('intercept',1:length(ans$loobeta)))}
knitr::opts_chunk$set(echo = TRUE)
plot(obj)
obj = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
set.seed(100)
x = matrix(rnorm(50*200),nrow=50)
y = x[,1:5]%*%c(5,4,3,2,1) + rnorm(50)
obj = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
plot(obj)
obj = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
plot(obj)
plot(obj)
predict(obj,t(rnorm(200)),'fit')
predict(obj,t(rnorm(200)),'fit')
coef(obj)
coef(obj)
plot(obj)
set.seed(100)
x = matrix(rnorm(50*200),nrow=50)
y = x[,1:5]%*%c(5,4,3,2,1) + rnorm(50)
ans = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
plot(ans)
predict(ans)
coef(ans)
plot.SolPathLooLasso <- function(object, plot = 2, ...){
k = object$obs_of_interest
plot_helper <-function(x, df){
i = findInterval(-x, -w_path, rightmost.closed = T)
beta1 = df[i]
beta2 = df[i+1]
w1 = w_path[i]
w2 = w_path[i+1]
hkk = hkk_path[i]
beta1+(beta2-beta1)*(get_xi(x, hkk, n) - get_xi(w1, hkk, n))/(get_xi(w2, hkk, n) - get_xi(w1, hkk, n))
}
beta_path = object$beta_path
w_path = object$w_path
hkk_path = object$hkk_path
coln = 1:length(beta_path[1,])
# ind = c(which((beta_hat>0) & (beta1<0)),  which((beta_hat<0) & (beta1>0)))
num_z = apply(beta_path, 2, function(c) sum(abs(c)< 1e-10))
ind = which(num_z>0 & num_z<length(w_path))
if(object$special){
if (length(ind)>0){
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(ind),aes(color = coef))+
ggtitle(paste("Solution path for Case",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = coln[ind[j]])
fig = fig + geom_function(data = xx, fun = plot_helper, args = list(ind[j]),
aes(color = coef))
}
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) + ggtitle(paste("Solution path for Case",toString(k))) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
else{
if (length(ind)>0){
if(plot ==1){
df = cbind(beta_path[,ind], w_path)
colnames(df) = c(coln[ind], 'w')
df = as_tibble(df) %>% gather('coef', 'val', -w)
print(ggplot(df, aes(x = w, y = val, group=coef, color = coef))+
geom_line()+ggtitle(paste("Approx Solution path for Case",toString(k)))+
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
xlab(TeX("Case weight $\\omega$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(beta_path[,ind]), aes(color = coef))+
ggtitle(paste("Solution path for Observation",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
df = beta_path[,ind]
colnames(df) = coln[ind]
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = colnames(df)[j])
fig = fig + geom_function(data = xx, fun = plot_helper,
args = list(df[,j]), aes(color = coef))
}
fig = fig + labs(color = "Feature")
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
}
obj = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
plot(obj)
plot(obj)
plot(obj)
plot.SolPathLooLasso <- function(object, plot = 2, ...){
k = object$obs_of_interest
plot_helper <-function(x, df){
print(w_path)
i = findInterval(-x, -w_path, rightmost.closed = T)
beta1 = df[i]
beta2 = df[i+1]
w1 = w_path[i]
w2 = w_path[i+1]
hkk = hkk_path[i]
beta1+(beta2-beta1)*(get_xi(x, hkk, n) - get_xi(w1, hkk, n))/(get_xi(w2, hkk, n) - get_xi(w1, hkk, n))
}
beta_path = object$beta_path
w_path = object$w_path
hkk_path = object$hkk_path
coln = 1:length(beta_path[1,])
# ind = c(which((beta_hat>0) & (beta1<0)),  which((beta_hat<0) & (beta1>0)))
num_z = apply(beta_path, 2, function(c) sum(abs(c)< 1e-10))
ind = which(num_z>0 & num_z<length(w_path))
if(object$special){
if (length(ind)>0){
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(ind),aes(color = coef))+
ggtitle(paste("Solution path for Case",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = coln[ind[j]])
fig = fig + geom_function(data = xx, fun = plot_helper, args = list(ind[j]),
aes(color = coef))
}
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) + ggtitle(paste("Solution path for Case",toString(k))) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
else{
if (length(ind)>0){
if(plot ==1){
df = cbind(beta_path[,ind], w_path)
colnames(df) = c(coln[ind], 'w')
df = as_tibble(df) %>% gather('coef', 'val', -w)
print(ggplot(df, aes(x = w, y = val, group=coef, color = coef))+
geom_line()+ggtitle(paste("Approx Solution path for Case",toString(k)))+
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
xlab(TeX("Case weight $\\omega$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(beta_path[,ind]), aes(color = coef))+
ggtitle(paste("Solution path for Observation",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
df = beta_path[,ind]
colnames(df) = coln[ind]
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = colnames(df)[j])
fig = fig + geom_function(data = xx, fun = plot_helper,
args = list(df[,j]), aes(color = coef))
}
fig = fig + labs(color = "Feature")
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
}
plot(obj)
plot.SolPathLooLasso <- function(object, plot = 2, ...){
k = object$obs_of_interest
plot_helper <-function(x, df){
i = findInterval(-x, -w_path, rightmost.closed = T)
beta1 = df[i]
beta2 = df[i+1]
w1 = w_path[i]
w2 = w_path[i+1]
hkk = hkk_path[i]
beta1+(beta2-beta1)*(get_xi(x, hkk, n) - get_xi(w1, hkk, n))/(get_xi(w2, hkk, n) - get_xi(w1, hkk, n))
}
beta_path = object$beta_path
w_path = object$w_path
hkk_path = object$hkk_path
coln = 1:length(beta_path[1,])
# ind = c(which((beta_hat>0) & (beta1<0)),  which((beta_hat<0) & (beta1>0)))
num_z = apply(beta_path, 2, function(c) sum(abs(c)< 1e-10))
ind = which(num_z>0 & num_z<length(w_path))
if(object$special){
if (length(ind)>0){
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(ind),aes(color = coef))+
ggtitle(paste("Solution path for Case",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = coln[ind[j]])
fig = fig + geom_function(data = xx, fun = plot_helper, args = list(ind[j]),
aes(color = coef))
}
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) + ggtitle(paste("Solution path for Case",toString(k))) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
else{
if (length(ind)>0){
if(plot ==1){
df = cbind(beta_path[,ind], w_path)
colnames(df) = c(coln[ind], 'w')
df = as_tibble(df) %>% gather('coef', 'val', -w)
print(ggplot(df, aes(x = w, y = val, group=coef, color = coef))+
geom_line()+ggtitle(paste("Approx Solution path for Case",toString(k)))+
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
xlab(TeX("Case weight $\\omega$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(beta_path[,ind]), aes(color = coef))+
ggtitle(paste("Solution path for Observation",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
df = beta_path[,ind]
colnames(df) = coln[ind]
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = colnames(df)[j])
fig = fig + geom_function(data = xx, fun = plot_helper,
args = list(df[,j]), aes(color = coef))
}
fig = fig + labs(color = "Feature")
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
}
plot(obj)
plot(obj)
plot.SolPathLooLasso <- function(object, plot = 2, ...){
k = object$obs_of_interest
plot_helper <-function(x, df){
i = findInterval(-x, -w_path, rightmost.closed = T)
beta1 = df[i]
beta2 = df[i+1]
w1 = w_path[i]
w2 = w_path[i+1]
hkk = hkk_path[i]
print(c(w1,w2))
beta1+(beta2-beta1)*(get_xi(x, hkk, n) - get_xi(w1, hkk, n))/(get_xi(w2, hkk, n) - get_xi(w1, hkk, n))
}
beta_path = object$beta_path
w_path = object$w_path
hkk_path = object$hkk_path
coln = 1:length(beta_path[1,])
# ind = c(which((beta_hat>0) & (beta1<0)),  which((beta_hat<0) & (beta1>0)))
num_z = apply(beta_path, 2, function(c) sum(abs(c)< 1e-10))
ind = which(num_z>0 & num_z<length(w_path))
if(object$special){
if (length(ind)>0){
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(ind),aes(color = coef))+
ggtitle(paste("Solution path for Case",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = coln[ind[j]])
fig = fig + geom_function(data = xx, fun = plot_helper, args = list(ind[j]),
aes(color = coef))
}
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) + ggtitle(paste("Solution path for Case",toString(k))) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
else{
if (length(ind)>0){
if(plot ==1){
df = cbind(beta_path[,ind], w_path)
colnames(df) = c(coln[ind], 'w')
df = as_tibble(df) %>% gather('coef', 'val', -w)
print(ggplot(df, aes(x = w, y = val, group=coef, color = coef))+
geom_line()+ggtitle(paste("Approx Solution path for Case",toString(k)))+
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
xlab(TeX("Case weight $\\omega$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
if (length(ind) == 1){
xx = data.frame(coef = coln[ind])
print(ggplot()+xlim(0,1) + xlab(TeX("Case weight $\\omega$")) +
ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
geom_function(data = xx, fun = plot_helper, args = list(beta_path[,ind]), aes(color = coef))+
ggtitle(paste("Solution path for Observation",toString(k)))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
else{
df = beta_path[,ind]
colnames(df) = coln[ind]
fig = ggplot()+xlim(0,1)
for (j in 1:length(ind)){
xx = data.frame(coef = colnames(df)[j])
fig = fig + geom_function(data = xx, fun = plot_helper,
args = list(df[,j]), aes(color = coef))
}
fig = fig + labs(color = "Feature")
print(fig + xlab(TeX("Case weight $\\omega$")) + ylab(TeX("Coefficient estimate $\\hat{\\beta}$")) +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5)))
}
}
}
else{
print(paste('there is no sign change for case',toString(k)))
}
}
}
plot(obj)
n
devtools::document()
devtools::document()
devtools::install()
coef(obj)
coef(obj)
obj = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
coef(object)
obj = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
obj = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
knitr::opts_chunk$set(echo = TRUE)
library(CaseWeightLasso, quietly = T)
?library
set.seed(100)
x = matrix(rnorm(50*200),nrow=50)
y = x[,1:5]%*%c(5,4,3,2,1) + rnorm(50)
obj = SolPathLooLasso(x,y,k = 1, s = 0.7, mode = "fraction")
plot(obj)
predict(obj,t(rnorm(200)),'fit')
coef(obj)
coef(obj)[1:10]
coef(obj)[1:10,]
coef(obj)[1]
coef(obj)[1,1]
coef(obj)[1:10,1]
plot(coef(obj))
coef(obj)[2:12]
coef(obj)[2:12,]
devtools::check()
?lars
?plot.lars
81+251+588
588/839
p = rnorm(10)
p = abs(p)/sum(abs(p))
rmultinom(100,5,p)
?rmultinom
dim(rmultinom(100,5,p))
